@model ShakuroMarketplaceNetMVC.Models.GoodViewModel

@{
    ViewBag.Title = "Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="good-header">
    <div class="good-menu">
        <div class="good-menu-additional-block"></div>
        <div class="good-menu-selected-item">
            <a href="/catalog/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@ViewBag.GoodUrl" class="good-menu-item-link">Description</a>
        </div>
        <div class="good-menu-item">
            <a href="/catalog/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@ViewBag.GoodUrl/Reviews" class="good-menu-item-link">Reviews</a>
        </div>
        <div class="good-menu-item">
            <a href="/catalog/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@ViewBag.GoodUrl/Overview" class="good-menu-item-link">Overview</a>
        </div>
        <div class="good-menu-item">
            <a href="/catalog/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@ViewBag.GoodUrl/Discussions" class="good-menu-item-link">Discussions</a>
        </div>
        <div class="good-menu-additional-block"></div>
    </div>
</div>

<div class="good-container">
    <div class="good">
        <div class="good-images">
            <div class="small-good-images">
                @foreach (var url in @Model.GoodImagesUrls.Split("::".ToCharArray(), StringSplitOptions.RemoveEmptyEntries))
                {
                    <div class="small-good-image-container">
                        <img src="/Content/Images/Goods/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@ViewBag.GoodUrl/@url" height="60">
                    </div>
                }
            </div>
            <div class="big-good-image-container">
                <img src="/Content/Images/Goods/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@ViewBag.GoodUrl/@Model.GoodImagesUrls.Split("::".ToCharArray(), StringSplitOptions.RemoveEmptyEntries)[0]" height="365">
            </div>
        </div>
        <div class="good-characteristics">
            <p class="good-name">@Model.GoodName</p>
            <div class="select-good-color-container">
                <select class="select-color" name="color[]">
                    <option disabled selected>@Model.GoodColor</option>
                    @foreach (var sameGoodColorAndLink in Model.SameGoodColorsAndLinksList)
                    {
                        if (sameGoodColorAndLink.GoodColor != Model.GoodColor)
                        {
                            <option value="/catalog/@ViewBag.CategoryUrl/@ViewBag.SubcategoryUrl/@sameGoodColorAndLink.GoodUrl" class="choose-color">@sameGoodColorAndLink.GoodColor</option>
                        }
                    }
                </select>
            </div> 
            <p class="good-description">Product Description</p>
            <ul class="good-description-list">
                @foreach (var characteristic in Model.Characteristics.Split("::".ToCharArray(), StringSplitOptions.RemoveEmptyEntries))
                {
                    <li class="good-description-list-item">@characteristic</li>
                }
            </ul>
        </div>
        <div class="purchase-options">
            <div class="purchase-options-price">@Model.GoodPrice USD</div>
            <div class="purchase-options-color">
                <div class="purchase-options-color-text">Color:</div>
                <div class="purchase-options-color-image" style="background-color: @Model.GoodColor;"></div>
            </div>
            <div class="purchase-options-rating">
                <div class="purchase-options-rating-text">Rating:</div>
                <div class="purchase-options-rating-value">
                    <div class="purchase-options-rating-value-star-icon"></div>
                    <div class="purchase-options-rating-value-number">@Model.GoodRating.ToString("0.00")</div>
                </div>
            </div>
            <div class="purchase-options-delivery">
                <div class="purchase-options-delivery-icon"></div>
                <div class="purchase-options-delivery-text">Delivery of 10$, tomorrow</div>
            </div>
            @if (Session["GoodIdList"] != null)
            {
                if ((Session["GoodIdList"] as List<int>).Contains(Model.Id))
                {
                    <div class="add-to-cart-button good-in-cart" good-id="@Model.Id">Remove from cart</div>
                }
                else
                {
                    <div class="add-to-cart-button good-not-in-cart" good-id="@Model.Id">Add to cart</div>
                }
            }
            else
            {
                <div class="add-to-cart-button good-not-in-cart" good-id="@Model.Id">Add to cart</div>
            }





            <div class="purchase-options-favorite">
                <div class="purchase-options-favorite-icon"></div>
                <div class="purchase-options-favorite-text">Add To Favorite</div>
            </div>

            <div class="purchase-options-compare">
                <div class="purchase-options-compare-icon"></div>
                <div class="purchase-options-compare-text">Add To Compare</div>
            </div>
        </div>
    </div>
</div>

@{Html.RenderAction("SimilarOffers", new { CategoryUrl = @ViewBag.CategoryUrl, SubcategoryUrl = @ViewBag.SubcategoryUrl, GoodUrl = @ViewBag.GoodUrl });}